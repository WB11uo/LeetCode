class Solution {
    public int findMinArrowShots(int[][] points) {
		if (points.length == 0) {
			return 0;
		}
		Arrays.sort(points, new Comparator<int[]>() {
			public int compare(int[] point1, int[] point2) {
				if (point1[1] > point2[1]) {
					return 1;
				} else if (point1[1] < point2[1]) {
					return -1;
				} else {
					return 0;
				}
			}
		});
		int pos = points[0][1];
		int ans = 1;
		for (int[] balloon : points) {
			if (pos < balloon[0]) {
				pos = balloon[1];
				ans++;
			}
		}
		return ans;
    }
}
/////////////////////////////////////////////////////////////
class Solution {
    public int findMinArrowShots(int[][] points) {
		if (points.length == 0) {
			return 0;
		}
		Arrays.sort(points, Comparator.comparingInt(o -> o[1]));
		int cnt = 1, end = points[0][1];
		for (int i = 1; i < points.length; i++) {
			if (points[i][0] <= end) {
				continue;
			}
			cnt++;
			end = points[i][1];
		}
		return cnt;
    }
}
