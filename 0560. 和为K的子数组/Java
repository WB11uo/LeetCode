class Solution {
    public int subarraySum(int[] nums, int k) {
		int len = nums.length;
		int ans = 0;
		
		for (int i = 0; i < len; i++) {
			int sum = 0;
			for (int j = i; j < len; j++) {
				sum += nums[j];
				if (sum == k) {
					ans++;
				}
			}
		}
		return ans;
    }
}
////////////////////////////////////////////////////////////////////////
class Solution {
    public int subarraySum(int[] nums, int k) {
		int count = 0, pre = 0;
		Map<Integer, Integer> map = new HashMap<>();
		map.put(0, 1);
		for (int i = 0; i < nums.length; i++) {
			pre += nums[i];
			if (map.containsKey(pre - k)) {
				count += map.get(pre - k);
			}
			map.put(pre, map.getOrDefault(pre, 0) + 1);
		}
		return count;
    }
}
