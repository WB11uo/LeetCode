class Solution {
    public int countPrimes(int n) {
		int[] isPrime = new int[n];
		Arrays.fill(isPrime, 1);
		int ans = 0;
		for (int i = 2; i < n; i++) {
			if (isPrime[i] == 1) {
				ans++;
				if ((long)i * i < n) {
					for (int j = i * i; j < n; j += i) {
						isPrime[j] = 0;
					}
				}
			}
		}
		return ans;
    }
}
///////////////////////////////////////
class Solution {
    public int countPrimes(int n) {
        boolean[] isPrim = new boolean[n];
        Arrays.fill(isPrim, true);
        for (int i = 2; i * i < n; i++) {
            if (isPrim[i]) {
                for (int j = i * i; j < n; j+=i) {
                    isPrim[j] = false;
                }
            }
        }
        int cnt = 0;
        for (int i = 2; i < n; i++) {
            if (isPrim[i]) {
                cnt++;
            }
        }
        return cnt;
    }
}
