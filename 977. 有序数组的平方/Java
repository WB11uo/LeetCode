class Solution {
    public int[] sortedSquares(int[] A) {
        int n = A.length;

        int neg = -1;
        for (int i = 0; i < n; i++) {//找最后一个负数的下标
            if (A[i] < 0) neg = i;
            else break;
        }

        int[] ans = new int[n];
        int index = 0, i = neg, j = neg + 1;
        while (i >= 0 || j < n) {
            if (i < 0) {//全为负数
                ans[index] = A[j] * A[j];
                j++;
            } else if (j >= n) {//全为正数
                ans[index] = A[i] * A[i];
                i--;
            } else if (A[i] * A[i] <= A[j] * A [j]) {
                ans[index] = A[i] * A[i];
                i--;
            } else {
                ans[index] = A[j] * A[j];
                j++;
            }
            index++;
        }
        return ans;
    }
}
///////////////////////////////////////////////////////
class Solution {
    public int[] sortedSquares(int[] A) {
        int n = A.length;
        int[] ans = new int[n];
        for (int i = 0, j = n - 1, pos = n-1; i <= j;) {
            if (A[i] * A[i] >  A[j] * A[j]) {
                ans[pos] = A[i] * A[i];
                i++;
            } else {
                ans[pos] = A[j] * A[j];
                j--;
            }
            pos--;
        }
        return ans;
    }
}
