class Solution {
    public int[] twoSum(int[] nums, int target) {
		int len = nums.length;
		Map<Integer, Integer> hashmap = new HashMap<>(len - 1);
		hashmap.put(nums[0], 0);
		for (int i = 1; i < len; i++) {
			int another = target - nums[i];
			if (hashmap.containsKey(another)) {
				return new int[]{i, hashmap.get(another)};
			}
			hashmap.put(nums[i], i);
		}
		return new int[]{0};
    }
}
//////////////////////////////
class Solution {
    public int[] twoSum(int[] nums, int target) {
        HashMap<Integer, Integer> map = new HashMap<>();
        for (int i = 0; i < nums.length; i++) {
            if (map.containsKey(target - nums[i])) {
                return new int[]{map.get(target - nums[i]), i};
            } else {
                map.put(nums[i], i);
            }
        }
        return null;
    }
}
