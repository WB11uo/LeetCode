class Solution {
    public int[] searchRange(int[] nums, int target) {
		int left = binarySearch(nums, target, true);
		int right = binarySearch(nums, target, false) - 1;
		if (left <= right && right < nums.length && nums[left] == target && nums[right] == target) {
			return new int[]{left, right};
		}
		return new int[]{-1, -1};
    }
	
	public int binarySearch(int[] nums, int target, boolean lower) {
		int left = 0, right = nums.length - 1, ans = nums.length;
		while (left <= right) {
			int mid = (left + right) / 2;
			if (nums[mid] > target || (lower && nums[mid] >= target)) {
				right = mid - 1;
				ans = mid;
			} else {
				left = mid + 1;
			}
		}
		return ans;
	}
}
