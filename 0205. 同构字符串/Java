class Solution {
    public boolean isIsomorphic(String s, String t) {
        Map<Character, Character> s2t = new HashMap<>();
		Map<Character, Character> t2s = new HashMap<>();
		int lens = s.length();
		int lent = t.length();
		if (lens != lent) {
			return false;
		}
		for (int i = 0; i < lens; i++) {
			char x = s.charAt(i), y = t.charAt(i);
			if ((s2t.containsKey(x) && s2t.get(x) != y) || (t2s.containsKey(y) && t2s.get(y) != x)) {
				return false;
			}
			s2t.put(x, y);
			t2s.put(y, x);
		}
		return true;
    }
}
/////////////////////////////////////////////
class Solution {
    public boolean isIsomorphic(String s, String t) {
        int[] preIndexOfS = new int[256];
        int[] preIndexOfT = new int[256];
        for (int i = 0; i < s.length(); i++) {
            char sc = s.charAt(i), tc = t.charAt(i);
            if (preIndexOfS[sc] != preIndexOfT[tc]) {
                return false;
            }
            preIndexOfS[sc] = i + 1;
            preIndexOfT[tc] = i + 1;
        }
        return true;
    }
}
