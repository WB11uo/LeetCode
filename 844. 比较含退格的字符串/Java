class Solution {
    public boolean backspaceCompare(String S, String T) {
        return Buffer(S).equals(Buffer(T));
    }

    public String Buffer(String S) {
        StringBuffer res = new StringBuffer();
        int n = S.length();
        for (int i = 0; i < n; i++) {
            char ch = S.charAt(i);
            if (ch != '#') {
                res.append(ch);
            } else {
                if (res.length() > 0)
                    res.deleteCharAt(res.length() - 1);
            }
        }
        return res.toString();
    }
}
/////////////////////////////////////////////////////
class Solution {
    public boolean backspaceCompare(String S, String T) {
        int i = S.length() - 1, j = T.length() - 1;
        int skipS = 0, skipT = 0;

        while (i >= 0 || j >= 0) {
            while (i >= 0) {
                if (S.charAt(i) == '#') {
                    skipS++;
                    i--;
                } else if (skipS > 0) {
                    skipS--;
                    i--;
                } else {
                    break;
                }
            }
            while (j >= 0) {
                if (T.charAt(j) == '#') {
                    skipT++;
                    j--;
                } else if (skipT > 0) {
                    skipT--;
                    j--;
                } else {
                    break;
                }
            }
            if (i >= 0 && j >= 0) {
                if (S.charAt(i) != T.charAt(j))
                    return false;
            } else {
                if (i >= 0 || j >= 0) {
                    return false;
                }
            }
            i--;
            j--;
        }
        return true;
    }
}
