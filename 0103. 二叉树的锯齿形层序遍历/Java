/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>>  ans = new LinkedList<List<Integer>>();
		if (root == null) {
			return ans;
		}
		
		Queue<TreeNode> nodeQueue = new LinkedList<TreeNode>();
		nodeQueue.offer(root);
		boolean isOrderLeft = true;
		
		while (!nodeQueue.isEmpty()) {
			Deque<Integer> levellist = new LinkedList<>();
			int size = nodeQueue.size();
			for (int i = 0; i < size; i++) {
				TreeNode curNode = nodeQueue.poll();
				if (isOrderLeft) {
					levellist.offerLast(curNode.val);
				} else {
					levellist.offerFirst(curNode.val);
				}
				if (curNode.left != null) {
					nodeQueue.offer(curNode.left);
				}
				if (curNode.right != null) {
					nodeQueue.offer(curNode.right);
				}
			}
			ans.add(new LinkedList<Integer>(levellist));
			isOrderLeft = !isOrderLeft;
		}
		return ans;
    }
}
