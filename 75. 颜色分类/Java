class Solution {
    public void sortColors(int[] nums) {
        int n = nums.length;
        int pre = 0;
        for (int i = 0; i < n; i++) {
            if (nums[i] == 0) {
                int temp = nums[i];
                nums[i] = nums[pre];
                nums[pre] = temp;
                pre++;
            }
        }
        for (int i = pre; i < n; i++) {
            if (nums[i] == 1) {
                int temp = nums[i];
                nums[i] = nums[pre];
                nums[pre] = temp;
                pre++;
            }
        }
    }
}
////////////////////////////////////////////////
class Solution {
    public void sortColors(int[] nums) {
        int n = nums.length;
        int p0 = 0, p2 = n - 1;
        for (int i = 0; i <= p2 && p2 < n; i++) {
            while (i <= p2 && nums[i] == 2) {
                int temp = nums[i];
                nums[i] = nums[p2];
                nums[p2] = temp;
                p2--;
            }
            if (nums[i] == 0) {
                int temp = nums[i];
                nums[i] = nums[p0];
                nums[p0] = temp;
                p0++;
            }
        }
    }
}
/////////////////////////////////////////////////////////////
class Solution {
    public void sortColors(int[] nums) {
		int zeros = -1, one = 0, two = nums.length;
		while (one < two) {
			if (nums[one] == 0) {
				swap(nums, ++zeros, one++);
			} else if (nums[one] == 2) {
				swap(nums, --two, one);
			} else {
				++one;
			}
		}
    }
	
	private void swap(int[] nums, int i, int j) {
		int t = nums[i];
		nums[i] = nums[j];
		nums[j] = t;
	}
}
